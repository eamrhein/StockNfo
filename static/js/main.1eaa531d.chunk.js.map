{"version":3,"sources":["util/stock_util.js","actions/stock_actions.js","reducers/stocks_reducer.js","reducers/entities_reducer.js","reducers/root_reducer.js","store/store.js","components/nav/searchBar.js","components/nav.js","components/newsFeedWidget.js","components/stockChartWidget.js","components/stockChartContainer.js","components/stockPage.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["API_TOKEN","fetchStockChart","ticker","range","dispatch","a","async","interval","fetch","response","intraDay","json","intraParsed","parsed","chart","APIStockUtil","then","stats","chartData","type","receiveStockChart","stockList","NSYE","concat","NASDAQ","stockReducer","state","action","Object","freeze","data","allStocks","quote","company","intraday","entitiesReducer","combineReducers","stocks","rootReducer","entities","history","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","Search","styled","div","Results","Result","Symbol","span","Label","Name","withRouter","props","useState","cursor","setCursor","input","setInput","match","stock","_match","field","testInput","toLowerCase","length","slice","name","symbol","icon","faSearch","className","placeholder","value","onKeyDown","e","keyCode","document","getElementsByClassName","innerHTML","push","onChange","target","results","i","filterStocks","map","key","onClick","split","join","renderResults","Navbar","nav","Logo","connect","loadStocks","useEffect","faPencilAlt","CompanInfo","Cell","td","Heading","Title","h1","Title2","h2","Link","Desc","p","Tags","Tag","About","expand","setExpand","description","CEO","employees","city","href","website","marketCap","peRatio","dividendYield","volume","tags","tag","id","StockWrapper","ChartWrapper","CompanyName","Price","h3","ChangeStyle","RangeGroup","RangeBtn","Stock","current","chartState","setChartState","setCompany","price","setPrice","setRange","change","setChange","parseChange","method","currentPrice","parseFloat","latestPrice","percent","prevPrice","toFixed","securityName","diff","rangeStr","sign","Math","changeComp","renderChange","handleRange","innerText","width","height","strokeDasharray","domain","hide","dataKey","connectNulls","dot","strokeWidth","stroke","separator","offset","position","y","isAnimationActive","ownProps","StockChart","params","sym","MainWrapper","main","Main","path","component","StockPage","App","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eaa531d.chunk.js","sourcesContent":["const API_TOKEN = \"pk_589ed06b435744fbb36ab24f30c0881e\";\n\nexport async function fetchStockChart(ticker, range) {\n  let interval;\n  switch (range) {\n    case \"5y\":\n      interval = 48;\n      break;\n    case \"1Y\":\n      interval = 9;\n      break;\n    case \"3M\":\n      interval = 4;\n      break;\n    case \"1M\":\n      interval = 1;\n      break;\n    case \"1D\":\n      interval = 12;\n      break;\n    default:\n      interval = 100;\n      break;\n  }\n  const response = await fetch(\n    `https://cloud.iexapis.com/stable/stock/${ticker}/batch?range=${range}&chartInterval=${interval}&types=company,quote,chart,stats&token=${API_TOKEN}`\n  );\n  const intraDay = await fetch(\n    `https://cloud.iexapis.com/stable/stock/${ticker}/batch?&types=chart&range=1D&chartInterval=12&token=${API_TOKEN}`\n  );\n  let intraParsed = await intraDay.json();\n  let parsed = await response.json();\n  parsed.intraDay = intraParsed.chart;\n  return parsed;\n}\n","import * as APIStockUtil from \"../util/stock_util\";\nexport const LOAD_SYMBOLS = \"LOAD_SYMBOLS\";\nexport const RECEIVE_STOCKS = \"RECEIVE_STOCKS\";\nexport const RECEIVE_STOCK_CHART = \"RECEIVE_STOCK_CHART\";\n\nexport const receiveStocks = stocks => ({\n  type: RECEIVE_STOCKS\n});\n\nconst receiveStockChart = (chartData, ticker) => ({\n  type: RECEIVE_STOCK_CHART,\n  ticker,\n  chartData\n});\n\nexport const fetchStockChart = (ticker, range) => dispatch =>\n  APIStockUtil.fetchStockChart(ticker, range).then(stats =>\n    dispatch(receiveStockChart(stats, ticker))\n  );\n","import {\n  RECEIVE_STOCKS,\n  RECEIVE_STOCK_CHART,\n} from \"../actions/stock_actions\";\nimport NSYE from \"../util/nyse.json\";\nimport NASDAQ from \"../util/nasdaq.json\";\n\nconst stockList = NSYE.concat(NASDAQ);\n\nconst stockReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let data = {};\n  switch (action.type) {\n    case RECEIVE_STOCKS:\n      return {\n        ...state,\n        allStocks: stockList\n      };\n    case RECEIVE_STOCK_CHART:\n      data = {\n        ...action.chartData.quote,\n        ...action.chartData.stats,\n        company: action.chartData.company,\n        chart: action.chartData.chart,\n        intraday: action.chartData.intraDay\n      };\n      return {\n        ...state,\n        [action.ticker]: data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stockReducer;\n","import { combineReducers } from 'redux'\nimport stockReducer from './stocks_reducer'\n\nconst entitiesReducer = combineReducers({\n    stocks: stockReducer\n})\n// stocks,\n// news\n// watches\n\nexport default entitiesReducer;\n\n","import { combineReducers } from 'redux';\nimport entitiesReducer from './entities_reducer'\nconst rootReducer = combineReducers({\n    entities: entitiesReducer,\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport thunk from 'redux-thunk'\nimport { createBrowserHistory } from 'history'\nimport rootReducer  from '../reducers/root_reducer'\n\nexport const history = createBrowserHistory()\n\nconst initialState = {}\nconst enhancers = []\nconst middleware = [\n    thunk,\n    routerMiddleware(history)\n]\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExt = window._REDUX_DEVTOOLS_EXTENSION_\n\n    if (typeof devToolsExt === 'function') {\n        enhancers.push(devToolsExt())\n    }\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nconst store = createStore(\n    connectRouter(history)(rootReducer),\n    initialState,\n    composedEnhancers\n)\n\nexport default store;\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nconst Search = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 8px;\n  border-radius: 5px;\n  color: #cbcbcb;\n  border: 1px solid #cbcbcb;\n  padding: 0 24px 0 3px;\n  width: 100%;\n  input {\n    width: 100%;\n    color: #cbcbcb;\n    border: none;\n    height: 36px;\n    tranistion: color 150ms ease-out;\n  }\n  .fa-search {\n    font-size: 14pt;\n  }\n`;\nconst Results = styled.div`\n  display: table;\n  width: 90vw;\n  -webkit-box-shadow: 3px 3px 5px 6px #cbcbcb;\n  -moz-box-shadow: 3px 3px 5px 6px #cbcbcb;\n  abox-shadow: 3px 3px 5px 6px #cbcbcb;\n  padding: 10px;\n  position: absolute;\n  left: 4vw;\n  top: 55px;\n  right: 1vw;\n  border-radius: 4px;\n  background-color: white;\n  .active {\n    background-color: #cbcbcb;\n    color: white;\n  }\n`;\nconst Result = styled.div`\n  display: table-row;\n  margin: 1px;\n  line-height: 1.5;\n`;\n\nconst Symbol = styled.span`\n  padding-right: 3rem;\n  display: table-cell;\n  font-weight: bolder;\n`;\n\nconst Label = styled.div`\n  font-size: 10pt;\n  color: grey;\n  font-weight: bolder;\n`;\nconst Name = styled.span`\n  display: table-cell;\n`;\nconst SearchBar = props => {\n  let { allStocks, history } = props;\n  const [cursor, setCursor] = useState(0);\n  const [input, setInput] = useState(\"\");\n\n  const match = stock => {\n    let match = false;\n    const _match = field => {\n      let testInput = input.toLowerCase();\n      if (typeof field === \"string\") {\n        field = field.toLowerCase();\n      }\n      return (\n        testInput.length <= field.length &&\n        field.slice(0, testInput.length) === testInput\n      );\n    };\n    if (stock.name && (_match(stock.name) || _match(stock.symbol)))\n      match = true;\n    return match;\n  };\n\n  const filterStocks = () => {\n    const results = [];\n    const maxSize = 6;\n    let i = 0;\n    if (allStocks) {\n      while (results.length < maxSize && i < allStocks.length) {\n        if (match(allStocks[i])) {\n          results.push(allStocks[i]);\n        }\n        i++;\n      }\n    }\n    return results;\n  };\n  const handleClick = symbol => {\n    setInput(\"\");\n    history.push(`/stocks/${symbol}`);\n  };\n  const renderResults = () => {\n    if (input.length > 0) {\n      return (\n        <Results>\n          <Label>Stock</Label>\n          {filterStocks().map((stock, i) => (\n            <Result\n              key={i}\n              onClick={() => handleClick(stock.symbol)}\n              className={cursor === i ? \"active\" : null}\n            >\n              <Symbol className=\"result\">{stock.symbol}</Symbol>\n              <Name>\n                {stock.name\n                  .split(\" \")\n                  .slice(0, 3)\n                  .join(\" \")}\n              </Name>\n            </Result>\n          ))}\n        </Results>\n      );\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.keyCode === 38 && cursor > 0) {\n      setCursor(cursor - 1);\n    } else if (e.keyCode === 40 && cursor < allStocks.length) {\n      setCursor(cursor + 1);\n    }\n    if (e.keyCode === 13) {\n      let elements = [...document.getElementsByClassName(\"result\")];\n      let symbol = elements[cursor].innerHTML;\n      setInput(\"\");\n      history.push(`/stocks/${symbol}`);\n    }\n  };\n  return (\n    <>\n      <Search>\n        <FontAwesomeIcon icon={faSearch} />\n        <input\n          type=\"text\"\n          className=\"searcbar-input\"\n          placeholder=\"  Search\"\n          value={input}\n          onKeyDown={handleKeyDown}\n          onChange={e => setInput(e.target.value)}\n        />\n      </Search>\n      {renderResults()}\n    </>\n  );\n};\nexport default withRouter(SearchBar);\n","import React, { useEffect } from \"react\";\nimport SearchBar from \"./nav/searchBar\";\nimport { connect } from \"react-redux\";\nimport { receiveStocks } from \"../actions/stock_actions\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\n\nconst Navbar = styled.nav`\n  margin-left: 30vw;\n  margin-right: 30vw;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n`;\nconst Logo = styled.i`\n  margin-right: 10px;\n  font-size: 24pt;\n  color: #7b1fa2;\n`;\nconst Nav = ({ allStocks, loadStocks }) => {\n  useEffect(() => {\n    loadStocks();\n  }, [loadStocks]);\n  return (\n    <Navbar>\n      <Logo>\n        <FontAwesomeIcon icon={faPencilAlt} />\n      </Logo>\n      <SearchBar allStocks={allStocks} />\n    </Navbar>\n  );\n};\nconst mSTP = state => ({\n  allStocks: state.entities.stocks.allStocks\n});\nconst mDTP = dispatch => ({\n  loadStocks: () => dispatch(receiveStocks())\n});\nexport default connect(mSTP, mDTP)(Nav);\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst CompanInfo = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Cell = styled.td`\n  padding: 1rem;\n`;\nconst Heading = styled.div`\n  font-weight: 800;\n  padding-bottom: 10px;\n`;\nconst Title = styled.h1`\n  font-size: 30pt;\n  margin: 0.5rem;\n`;\nconst Title2 = styled.h2`\n  font-size: 20pt;\n  margin: 0.5rem;\n`;\nconst Link = styled.a`\n  cursor: pointer;\n  color: #7b1fa2;\n  font-weight: 600;\n`;\nconst Desc = styled.p`\n  text-indent: 25px;\n  line-height: 1.5;\n  font-size: 10pt;\n`;\nconst Tags = styled.div`\n  display: flex;\n`;\nconst Tag = styled.span`\n  flex-direction: row;\n  align-items: center;\n  background-color: #7b1fa2;\n  color: #e8c9f5;\n  fill: purple;\n  font-size: 10pt;\n  font-weight: 700;\n  margin: 0 12px 5px 0;\n  padding: 8px;\n  border-radius: 17px;\n`;\nconst About = ({ stock }) => {\n  let { company } = stock;\n  const [expand, setExpand] = useState(false);\n  return (\n    <CompanInfo>\n      <Title>About</Title>\n      <Desc>\n        {expand\n          ? company.description\n          : company.description.slice(0, 350) + \"... \"}\n        <Link onClick={() => setExpand(!expand)}>\n          {expand ? \"read less\" : \"read more\"}\n        </Link>\n      </Desc>\n      <table>\n        <tbody>\n          <tr>\n            <Cell>\n              <Heading>CEO</Heading>\n              <div>{company.CEO || \"n/a\"}</div>\n            </Cell>\n            <Cell>\n              <Heading>Employees</Heading>\n              <div>{company.employees || \"n/a\"}</div>\n            </Cell>\n            <Cell>\n              <Heading>Location</Heading>\n              <div>{company.city + \", \" + company.state || \"n/a\"}</div>\n            </Cell>\n            <Cell>\n              <Heading>Website</Heading>\n              <div>\n                <a href={company.website}>{company.website}</a>\n              </div>\n            </Cell>\n          </tr>\n          <tr>\n            <Cell>\n              <Heading>Market Cap</Heading>\n              <div>{stock.marketCap || \"n/a\"}</div>\n            </Cell>\n            <Cell>\n              <Heading>Price-Earnings Ratio</Heading>\n              <div>{stock.peRatio || \"n/a\"}</div>\n            </Cell>\n            <Cell>\n              <Heading>Dividend Yield</Heading>\n              <div>{stock.dividendYield || \"n/a\"}</div>\n            </Cell>\n            <Cell>\n              <Heading>Volume</Heading>\n              <div>{stock.volume || \"n/a\"}</div>\n            </Cell>\n          </tr>\n        </tbody>\n      </table>\n      <Title2>Investment Type</Title2>\n      <Tags>\n        {company.tags.map((tag, id) => (\n          <Tag key={id}>{tag}</Tag>\n        ))}\n      </Tags>\n    </CompanInfo>\n  );\n};\nexport default About;\n","import React, { useState, useEffect } from \"react\";\nimport About from \"./newsFeedWidget\";\nimport {\n  LineChart,\n  Line,\n  YAxis,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend\n} from \"recharts\";\nimport styled from \"styled-components\";\nconst StockWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80vw;\n  bottom: 5vw;\n`;\nconst ChartWrapper = styled.div``;\nconst CompanyName = styled.h1`\n  text-align: center;\n  line-height: 42px;\n  font-size: 36px;\n  font-weight: 500;\n`;\nconst Price = styled.h3`\n  font-size: 36px;\n  font-weight: 400;\n  line-height 42px;\n  margin-left: 1rem;\n`;\nconst ChangeStyle = styled.div`\n  margin-left: 1rem;\n`;\nconst RangeGroup = styled.div`\n  cursor: pointer;\n  display: flex;\n  font-weight: 600;\n  margin-left: 1rem;\n  #active {\n    color: #7b1fa2;\n  }\n`;\nconst RangeBtn = styled.div`\n  font-size: 0.8rem;\n  margin: 0rem 0.25rem;\n`;\n\nconst Stock = ({ stocks, fetchStockChart, current }) => {\n  let [chartState, setChartState] = useState([]);\n  let [company, setCompany] = useState(\"\");\n  let [price, setPrice] = useState(\"\");\n  let [range, setRange] = useState(\"5Y\");\n  let [change, setChange] = useState(\"\");\n  useEffect(() => {\n    fetchStockChart(current, range);\n  }, [fetchStockChart, range, current]);\n\n  useEffect(() => {\n    if (stocks[current]) {\n      const parseChange = method => {\n        let currentPrice = parseFloat(stocks[current].latestPrice);\n        let percent = parseFloat(stocks[current][method]);\n        let prevPrice = currentPrice - currentPrice * percent;\n        percent = (percent * 100).toFixed(2);\n        let diff = (currentPrice - prevPrice).toFixed(2);\n        return [diff, percent];\n      };\n      function renderChange() {\n        let rangeStr = \"\";\n        let diff, percent;\n        switch (range) {\n          case \"1D\":\n            [diff, percent] = parseChange(\"changePercent\");\n            rangeStr = \" Today\";\n            break;\n          case \"1M\":\n            [diff, percent] = parseChange(\"month1ChangePercent\");\n            rangeStr = \" Past Month\";\n            break;\n          case \"3M\":\n            [diff, percent] = parseChange(\"month3ChangePercent\");\n            rangeStr = \" Past 3 Months\";\n            break;\n          case \"1Y\":\n            [diff, percent] = parseChange(\"year1ChangePercent\");\n            rangeStr = \" Past Year\";\n            break;\n          case \"5Y\":\n            [diff, percent] = parseChange(\"year5ChangePercent\");\n            rangeStr = \" Past 5 Years\";\n            break;\n          default:\n            break;\n        }\n        let sign = Math.sign(diff) === 1 ? \"+\" : null;\n        let changeComp = (\n          <ChangeStyle>\n            <span>\n              {sign}${diff} ({percent}%)\n            </span>\n            <span>{rangeStr}</span>\n          </ChangeStyle>\n        );\n        setChange(changeComp);\n      }\n      setChartState(stocks[current].chart);\n      setCompany(stocks[current].company.securityName);\n      setPrice(stocks[current].latestPrice.toFixed(2));\n      renderChange();\n    }\n  }, [stocks, current, range]);\n  const handleRange = e => {\n    let text = e.target.innerText;\n    switch (text) {\n      case \"1D\":\n        setRange(\"1D\");\n        setChartState(stocks[current].intraday);\n        break;\n      case \"1M\":\n        setRange(\"1M\");\n        setChartState(stocks[current].chart);\n        break;\n      case \"3M\":\n        setRange(\"3M\");\n        setChartState(stocks[current].chart);\n        break;\n      case \"1Y\":\n        setRange(\"1Y\");\n        setChartState(stocks[current].chart);\n        break;\n      case \"5Y\":\n        setRange(\"5Y\");\n        setChartState(stocks[current].chart);\n        break;\n      default:\n        break;\n    }\n  };\n  let renderLineChart = () => {\n    return (\n      <ResponsiveContainer width=\"100%\" height={400}>\n        <LineChart data={chartState} width={400} height={400}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <YAxis domain={[\"dataMin\", \"dataMax\"]} hide={true} />\n          <XAxis hide={true} dataKey=\"label\" />\n          <Legend />\n          <Line\n            connectNulls={true}\n            name=\"USD $\"\n            type=\"monotone\"\n            dot={false}\n            dataKey=\"close\"\n            strokeWidth={2.5}\n            stroke=\"#7B1FA2\"\n          />\n          <Tooltip\n            separator=\"\"\n            offset={-40}\n            position={{ y: -15 }}\n            isAnimationActive={true}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  };\n  return (\n    <StockWrapper>\n      <CompanyName>{company}</CompanyName>\n      <Price>${price}</Price>\n      {change}\n      {chartState.length !== 0 ? (\n        <ChartWrapper>{renderLineChart()}</ChartWrapper>\n      ) : (\n        <div className=\"chart-Wraper\">...Loading</div>\n      )}\n      <RangeGroup>\n        <RangeBtn id={range === \"1D\" ? \"active\" : null} onClick={handleRange}>\n          1D\n        </RangeBtn>\n        <RangeBtn id={range === \"1M\" ? \"active\" : null} onClick={handleRange}>\n          1M\n        </RangeBtn>\n        <RangeBtn id={range === \"3M\" ? \"active\" : null} onClick={handleRange}>\n          3M\n        </RangeBtn>\n        <RangeBtn id={range === \"1Y\" ? \"active\" : null} onClick={handleRange}>\n          1Y\n        </RangeBtn>\n        <RangeBtn id={range === \"5Y\" ? \"active\" : null} onClick={handleRange}>\n          5Y\n        </RangeBtn>\n      </RangeGroup>\n      {stocks[current] ? (\n        stocks[current][\"company\"] ? (\n          <About stock={stocks[current]} />\n        ) : (\n          \"...loading\"\n        )\n      ) : null}\n    </StockWrapper>\n  );\n};\nexport default Stock;\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchStockChart } from \"../actions/stock_actions\";\nimport StockChart from \"./stockChartWidget\";\n\nconst mapSTP = (state, ownProps) => ({\n  stocks: state.entities.stocks,\n  current: \"MSFT\",\n  ownProps\n});\n\nconst mapDTP = dispatch => ({\n  fetchStockChart: (ticker, range) => dispatch(fetchStockChart(ticker, range))\n});\n\nexport default withRouter(connect(mapSTP, mapDTP)(StockChart));\n","import { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { fetchStockChart } from \"../actions/stock_actions\";\nimport StockChart from \"./stockChartWidget\";\n\nconst mapSTP = (state, ownProps) => ({\n  stocks: state.entities.stocks,\n  current: ownProps.match.params.sym,\n  ownProps\n});\n\nconst mapDTP = dispatch => ({\n  fetchStockChart: (ticker, range) => dispatch(fetchStockChart(ticker, range))\n});\n\nexport default withRouter(connect(mapSTP, mapDTP)(StockChart));","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Stock from \"./stockChartContainer\";\nimport StockPage from \"./stockPage\";\nimport styled from \"styled-components\";\n\nconst Title = styled.h1`\n  margin: 1rem;\n  font-size: 2rem;\n  font-weight: bolder;\n`;\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Main = () => {\n  return (\n    <MainWrapper>\n      <Title>Stock Research</Title>\n      <Switch>\n        <Route path=\"/stocks/:sym\" component={StockPage} />\n        <Route path=\"/\" component={Stock} />\n      </Switch>\n    </MainWrapper>\n  );\n};\nexport default Main;\n","import React from \"react\";\nimport Nav from \"./components/nav\";\nimport Main from \"./components/main\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <Router>\n        <Nav />\n        <Main />\n      </Router>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/store'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}