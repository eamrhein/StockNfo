{"version":3,"sources":["util/stock_util.js","actions/stock_actions.js","reducers/stocks_reducer.js","reducers/entities_reducer.js","reducers/root_reducer.js","store/store.js","components/nav/searchBar.jsx","components/nav.jsx","components/newsFeedWidget.jsx","components/stockChartWidget.jsx","components/stockPage.js","components/main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API_TOKEN","fetchStockChart","ticker","range","dispatch","a","async","interval","fetch","response","intraDay","json","intraParsed","parsed","chart","APIStockUtil","then","stats","chartData","type","receiveStockChart","stockList","NSYE","concat","NASDAQ","stockReducer","state","action","Object","freeze","data","allStocks","quote","company","intraday","entitiesReducer","combineReducers","stocks","rootReducer","entities","history","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","Search","styled","div","Results","Result","Symbol","span","Label","Name","SearchBar","props","useState","cursor","setCursor","input","setInput","match","stock","matchBool","matchFunc","field","fstring","testInput","toLowerCase","length","slice","name","symbol","icon","faSearch","className","placeholder","value","onKeyDown","e","keyCode","document","getElementsByClassName","innerHTML","push","onChange","target","results","i","filterStocks","map","onClick","split","join","defaultProps","withRouter","Navbar","nav","Logo","Nav","loadStocks","useEffect","faPencilAlt","connect","CompanInfo","Cell","td","Heading","Title","h1","Title2","h2","Text","Desc","p","Tags","Tag","About","expand","setExpand","description","CEO","employees","city","href","website","marketCap","peRatio","dividendYield","volume","tags","tag","StockWrapper","ChartWrapper","CompanyName","Price","h3","ChangeStyle","RangeGroup","RangeBtn","Stock","current","chartState","setChartState","setCompany","price","setPrice","setRange","change","setChange","parseChange","method","currentPrice","parseFloat","latestPrice","percent","prevPrice","toFixed","securityName","diff","rangeStr","sign","Math","changeComp","renderChange","handleRange","innerText","width","height","strokeDasharray","domain","hide","dataKey","connectNulls","dot","strokeWidth","stroke","separator","offset","position","y","isAnimationActive","id","ownProps","params","sym","StockChart","MainWrapper","main","Main","path","component","StockPage","App","basename","process","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00853f66.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst API_TOKEN = 'pk_589ed06b435744fbb36ab24f30c0881e';\n\nexport async function fetchStockChart(ticker, range) {\n  let interval;\n  switch (range) {\n    case '5y':\n      interval = 48;\n      break;\n    case '1Y':\n      interval = 9;\n      break;\n    case '3M':\n      interval = 4;\n      break;\n    case '1M':\n      interval = 1;\n      break;\n    case '1D':\n      interval = 12;\n      break;\n    default:\n      interval = 100;\n      break;\n  }\n  const response = await fetch(\n    `https://cloud.iexapis.com/stable/stock/${ticker}/batch?range=${range}&chartInterval=${interval}&types=company,quote,chart,stats&token=${API_TOKEN}`,\n  );\n  const intraDay = await fetch(\n    `https://cloud.iexapis.com/stable/stock/${ticker}/batch?&types=chart&range=1D&chartInterval=12&token=${API_TOKEN}`,\n  );\n  const intraParsed = await intraDay.json();\n  const parsed = await response.json();\n  parsed.intraDay = intraParsed.chart;\n  return parsed;\n}\n","import * as APIStockUtil from '../util/stock_util';\n\nexport const LOAD_SYMBOLS = 'LOAD_SYMBOLS';\nexport const RECEIVE_STOCKS = 'RECEIVE_STOCKS';\nexport const RECEIVE_STOCK_CHART = 'RECEIVE_STOCK_CHART';\n\nexport const receiveStocks = () => ({\n  type: RECEIVE_STOCKS,\n});\n\nconst receiveStockChart = (chartData, ticker) => ({\n  type: RECEIVE_STOCK_CHART,\n  ticker,\n  chartData,\n});\n\nexport const fetchStockChart = (ticker, range) => (dispatch) => (\n  APIStockUtil.fetchStockChart(ticker, range)\n    .then((stats) => dispatch(receiveStockChart(stats, ticker))));\n","import { RECEIVE_STOCKS, RECEIVE_STOCK_CHART } from '../actions/stock_actions';\nimport NSYE from '../util/nyse.json';\nimport NASDAQ from '../util/nasdaq.json';\n\nconst stockList = NSYE.concat(NASDAQ);\n\nconst stockReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let data = {};\n  switch (action.type) {\n    case RECEIVE_STOCKS:\n      return {\n        ...state,\n        allStocks: stockList,\n      };\n    case RECEIVE_STOCK_CHART:\n      data = {\n        ...action.chartData.quote,\n        ...action.chartData.stats,\n        company: action.chartData.company,\n        chart: action.chartData.chart,\n        intraday: action.chartData.intraDay,\n      };\n      return {\n        ...state,\n        [action.ticker]: data,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stockReducer;\n","import { combineReducers } from 'redux';\nimport stockReducer from './stocks_reducer';\n\nconst entitiesReducer = combineReducers({\n  stocks: stockReducer,\n});\n\nexport default entitiesReducer;\n","import { combineReducers } from 'redux';\nimport entitiesReducer from './entities_reducer';\n\nconst rootReducer = combineReducers({\n  entities: entitiesReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport rootReducer from '../reducers/root_reducer';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExt = window._REDUX_DEVTOOLS_EXTENSION_;\n\n  if (typeof devToolsExt === 'function') {\n    enhancers.push(devToolsExt());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers,\n);\n\nexport default store;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\n\nconst Search = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 8px;\n  border-radius: 5px;\n  color: #cbcbcb;\n  border: 1px solid #cbcbcb;\n  padding: 0 24px 0 3px;\n  width: 100%;\n  input {\n    width: 100%;\n    color: #cbcbcb;\n    border: none;\n    height: 36px;\n    tranistion: color 150ms ease-out;\n  }\n  .fa-search {\n    font-size: 14pt;\n  }\n`;\nconst Results = styled.div`\n  display: table;\n  width: 90vw;\n  -webkit-box-shadow: 3px 3px 5px 6px #cbcbcb;\n  -moz-box-shadow: 3px 3px 5px 6px #cbcbcb;\n  abox-shadow: 3px 3px 5px 6px #cbcbcb;\n  padding: 10px;\n  position: absolute;\n  left: 4vw;\n  top: 55px;\n  right: 1vw;\n  border-radius: 4px;\n  background-color: white;\n  .active {\n    background-color: #cbcbcb;\n    color: white;\n  }\n`;\nconst Result = styled.div`\n  display: table-row;\n  margin: 1px;\n  line-height: 1.5;\n`;\n\nconst Symbol = styled.span`\n  padding-right: 3rem;\n  display: table-cell;\n  font-weight: bolder;\n`;\n\nconst Label = styled.div`\n  font-size: 10pt;\n  color: grey;\n  font-weight: bolder;\n`;\nconst Name = styled.span`\n  display: table-cell;\n`;\nconst SearchBar = (props) => {\n  const { allStocks, history } = props;\n  const [cursor, setCursor] = useState(0);\n  const [input, setInput] = useState('');\n\n  const match = (stock) => {\n    let matchBool = false;\n    const matchFunc = (field) => {\n      let fstring = '';\n      const testInput = input.toLowerCase();\n      if (typeof field === 'string') {\n        fstring = field.toLowerCase();\n      }\n      return (\n        testInput.length <= field.length\n        && fstring.slice(0, testInput.length) === testInput\n      );\n    };\n    if (stock.name && (matchFunc(stock.name) || matchFunc(stock.symbol))) {\n      matchBool = true;\n    }\n    return matchBool;\n  };\n\n  const filterStocks = () => {\n    const results = [];\n    const maxSize = 6;\n    let i = 0;\n    if (allStocks) {\n      while (results.length < maxSize && i < allStocks.length) {\n        if (match(allStocks[i])) {\n          results.push(allStocks[i]);\n        }\n        i += 1;\n      }\n    }\n    return results;\n  };\n  const handleClick = (symbol) => {\n    setInput('');\n    history.push(`/${symbol}`);\n  };\n  const renderResults = () => {\n    if (input.length > 0) {\n      return (\n        <Results>\n          <Label>Stock</Label>\n          {filterStocks().map((stock, i) => (\n            <Result\n              onClick={() => handleClick(stock.symbol)}\n              className={cursor === i ? 'active' : null}\n            >\n              <Symbol className=\"result\">{stock.symbol}</Symbol>\n              <Name>\n                {stock.name\n                  .split(' ')\n                  .slice(0, 3)\n                  .join(' ')}\n              </Name>\n            </Result>\n          ))}\n        </Results>\n      );\n    }\n    return null;\n  };\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 38 && cursor > 0) {\n      setCursor(cursor - 1);\n    } else if (e.keyCode === 40 && cursor < allStocks.length) {\n      setCursor(cursor + 1);\n    }\n    if (e.keyCode === 13) {\n      const elements = [...document.getElementsByClassName('result')];\n      const symbol = elements[cursor].innerHTML;\n      setInput('');\n\n      history.push(`/${symbol}`);\n    }\n  };\n  return (\n    <>\n      <Search>\n        <FontAwesomeIcon icon={faSearch} />\n        <input\n          type=\"text\"\n          className=\"searcbar-input\"\n          placeholder=\"  Search\"\n          value={input}\n          onKeyDown={handleKeyDown}\n          onChange={(e) => setInput(e.target.value)}\n        />\n      </Search>\n      {renderResults()}\n    </>\n  );\n};\nSearchBar.defaultProps = {\n  allStocks: [],\n  history: {},\n};\nSearchBar.propTypes = {\n  allStocks: PropTypes.array.length >= 0,\n  history: {\n    push: PropTypes.func.isRequired,\n  },\n};\n\nexport default withRouter(SearchBar);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport { receiveStocks } from '../actions/stock_actions';\nimport SearchBar from './nav/searchBar';\n\nconst Navbar = styled.nav`\n  margin-left: 30vw;\n  margin-right: 30vw;\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n`;\nconst Logo = styled.i`\n  margin-right: 10px;\n  font-size: 24pt;\n  color: #7b1fa2;\n`;\nconst Nav = ({ allStocks, loadStocks }) => {\n  useEffect(() => {\n    loadStocks();\n  }, [loadStocks]);\n  return (\n    <Navbar>\n      <Logo>\n        <FontAwesomeIcon icon={faPencilAlt} />\n      </Logo>\n      <SearchBar allStocks={allStocks} />\n    </Navbar>\n  );\n};\n\nNav.defaultProps = {\n  allStocks: [],\n};\nNav.propTypes = {\n  allStocks: PropTypes.array.length >= 0,\n  loadStocks: PropTypes.func.isRequired,\n};\n\nconst mSTP = (state) => ({\n  allStocks: state.entities.stocks.allStocks,\n});\nconst mDTP = (dispatch) => ({\n  loadStocks: () => dispatch(receiveStocks()),\n});\nexport default connect(mSTP, mDTP)(Nav);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst CompanInfo = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Cell = styled.td`\n  padding: 1rem;\n`;\nconst Heading = styled.div`\n  font-weight: 800;\n  padding-bottom: 10px;\n`;\nconst Title = styled.h1`\n  font-size: 30pt;\n  margin: 0.5rem;\n`;\nconst Title2 = styled.h2`\n  font-size: 20pt;\n  margin: 0.5rem;\n`;\nconst Text = styled.span`\n  cursor: pointer;\n  color: #7b1fa2;\n  font-weight: 600;\n`;\nconst Desc = styled.p`\n  text-indent: 25px;\n  line-height: 1.5;\n  font-size: 10pt;\n`;\nconst Tags = styled.div`\n  display: flex;\n`;\nconst Tag = styled.span`\n  flex-direction: row;\n  align-items: center;\n  background-color: #7b1fa2;\n  color: #e8c9f5;\n  fill: purple;\n  font-size: 10pt;\n  font-weight: 700;\n  margin: 0 12px 5px 0;\n  padding: 8px;\n  border-radius: 17px;\n`;\nconst About = ({ stock }) => {\n  const { company } = stock;\n  const [expand, setExpand] = useState(false);\n  return (\n    <CompanInfo>\n      <Title>About</Title>\n      <Desc>\n        {expand\n          ? company.description\n          : `${company.description.slice(0, 350)}... `}\n        <Text onClick={() => setExpand(!expand)}>\n          {expand ? 'read less' : 'read more'}\n        </Text>\n      </Desc>\n      <table>\n        <tbody>\n          <tr>\n            <Cell>\n              <Heading>CEO</Heading>\n              <div>{company.CEO || 'n/a'}</div>\n            </Cell>\n            <Cell>\n              <Heading>Employees</Heading>\n              <div>{company.employees || 'n/a'}</div>\n            </Cell>\n            <Cell>\n              <Heading>Location</Heading>\n              <div>{`${company.city}, ${company.state}` || 'n/a'}</div>\n            </Cell>\n            <Cell>\n              <Heading>Website</Heading>\n              <div>\n                <a href={company.website}>{company.website}</a>\n              </div>\n            </Cell>\n          </tr>\n          <tr>\n            <Cell>\n              <Heading>Market Cap</Heading>\n              <div>{stock.marketCap || 'n/a'}</div>\n            </Cell>\n            <Cell>\n              <Heading>Price-Earnings Ratio</Heading>\n              <div>{stock.peRatio || 'n/a'}</div>\n            </Cell>\n            <Cell>\n              <Heading>Dividend Yield</Heading>\n              <div>{stock.dividendYield || 'n/a'}</div>\n            </Cell>\n            <Cell>\n              <Heading>Volume</Heading>\n              <div>{stock.volume || 'n/a'}</div>\n            </Cell>\n          </tr>\n        </tbody>\n      </table>\n      <Title2>Investment Type</Title2>\n      <Tags>\n        {company.tags.map((tag) => (\n          <Tag>{tag}</Tag>\n        ))}\n      </Tags>\n    </CompanInfo>\n  );\n};\n\nAbout.defaultProps = {\n  stock: {\n    company: {},\n  },\n};\nAbout.propTypes = {\n  stock: {\n    company: {\n      CEO: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      employees: PropTypes.string.isRequired,\n      city: PropTypes.string.isRequired,\n      state: PropTypes.string.isRequired,\n      website: PropTypes.string.isRequired,\n    },\n  },\n};\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LineChart,\n  Line,\n  YAxis,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend,\n} from 'recharts';\nimport styled from 'styled-components';\nimport About from './newsFeedWidget';\n\nconst StockWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80vw;\n  bottom: 5vw;\n`;\nconst ChartWrapper = styled.div``;\nconst CompanyName = styled.h1`\n  text-align: center;\n  line-height: 42px;\n  font-size: 36px;\n  font-weight: 500;\n`;\nconst Price = styled.h3`\n  font-size: 36px;\n  font-weight: 400;\n  line-height 42px;\n  margin-left: 1rem;\n`;\nconst ChangeStyle = styled.div`\n  margin-left: 1rem;\n`;\nconst RangeGroup = styled.div`\n  cursor: pointer;\n  display: flex;\n  font-weight: 600;\n  margin-left: 1rem;\n  #active {\n    color: #7b1fa2;\n  }\n`;\nconst RangeBtn = styled.div`\n  font-size: 0.8rem;\n  margin: 0rem 0.25rem;\n`;\n\nconst Stock = ({ stocks, fetchStockChart, current }) => {\n  const [chartState, setChartState] = useState([]);\n  const [company, setCompany] = useState('');\n  const [price, setPrice] = useState('');\n  const [range, setRange] = useState('5Y');\n  const [change, setChange] = useState('');\n\n  useEffect(() => {\n    fetchStockChart(current, range);\n  }, [fetchStockChart, range, current]);\n\n  useEffect(() => {\n    if (stocks[current]) {\n      const parseChange = (method) => {\n        const currentPrice = parseFloat(stocks[current].latestPrice);\n        let percent = parseFloat(stocks[current][method]);\n        const prevPrice = currentPrice - currentPrice * percent;\n        percent = (percent * 100).toFixed(2);\n        const diff = (currentPrice - prevPrice).toFixed(2);\n        return [diff, percent];\n      };\n      const renderChange = () => {\n        let rangeStr = '';\n        let diff;\n        let percent;\n        switch (range) {\n          case '1D':\n            [diff, percent] = parseChange('changePercent');\n            rangeStr = ' Today';\n            break;\n          case '1M':\n            [diff, percent] = parseChange('month1ChangePercent');\n            rangeStr = ' Past Month';\n            break;\n          case '3M':\n            [diff, percent] = parseChange('month3ChangePercent');\n            rangeStr = ' Past 3 Months';\n            break;\n          case '1Y':\n            [diff, percent] = parseChange('year1ChangePercent');\n            rangeStr = ' Past Year';\n            break;\n          case '5Y':\n            [diff, percent] = parseChange('year5ChangePercent');\n            rangeStr = ' Past 5 Years';\n            break;\n          default:\n            break;\n        }\n        const sign = Math.sign(diff) === 1 ? '+' : null;\n        const changeComp = (\n          <ChangeStyle>\n            <span>\n              {sign}\n$\n              {diff}\n              {' '}\n(\n              {percent}\n              %)\n            </span>\n            <span>{rangeStr}</span>\n          </ChangeStyle>\n        );\n        setChange(changeComp);\n      };\n      setChartState(stocks[current].chart);\n      setCompany(stocks[current].company.securityName);\n      setPrice(stocks[current].latestPrice.toFixed(2));\n      renderChange();\n    }\n  }, [stocks, current, range]);\n  const handleRange = (e) => {\n    const text = e.target.innerText;\n    switch (text) {\n      case '1D':\n        setRange('1D');\n        setChartState(stocks[current].intraday);\n        break;\n      case '1M':\n        setRange('1M');\n        setChartState(stocks[current].chart);\n        break;\n      case '3M':\n        setRange('3M');\n        setChartState(stocks[current].chart);\n        break;\n      case '1Y':\n        setRange('1Y');\n        setChartState(stocks[current].chart);\n        break;\n      case '5Y':\n        setRange('5Y');\n        setChartState(stocks[current].chart);\n        break;\n      default:\n        break;\n    }\n  };\n  const renderLineChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={chartState} width={400} height={400}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <YAxis domain={['dataMin', 'dataMax']} hide />\n        <XAxis hide dataKey=\"label\" />\n        <Legend />\n        <Line\n          connectNulls\n          name=\"USD $\"\n          type=\"monotone\"\n          dot={false}\n          dataKey=\"close\"\n          strokeWidth={2.5}\n          stroke=\"#7B1FA2\"\n        />\n        <Tooltip\n          separator=\"\"\n          offset={-40}\n          position={{ y: -15 }}\n          isAnimationActive\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n  return (\n    <StockWrapper>\n      <CompanyName>{company}</CompanyName>\n      <Price>\n$\n        {price}\n      </Price>\n      {change}\n      {chartState.length !== 0 ? (\n        <ChartWrapper>{renderLineChart()}</ChartWrapper>\n      ) : (\n        <div className=\"chart-Wraper\">...Loading</div>\n      )}\n      <RangeGroup>\n        <RangeBtn id={range === '1D' ? 'active' : null} onClick={handleRange}>\n          1D\n        </RangeBtn>\n        <RangeBtn id={range === '1M' ? 'active' : null} onClick={handleRange}>\n          1M\n        </RangeBtn>\n        <RangeBtn id={range === '3M' ? 'active' : null} onClick={handleRange}>\n          3M\n        </RangeBtn>\n        <RangeBtn id={range === '1Y' ? 'active' : null} onClick={handleRange}>\n          1Y\n        </RangeBtn>\n        <RangeBtn id={range === '5Y' ? 'active' : null} onClick={handleRange}>\n          5Y\n        </RangeBtn>\n      </RangeGroup>\n      {stocks[current] ? <About stock={stocks[current]} /> : '...loading'}\n    </StockWrapper>\n  );\n};\nStock.defaultProps = {\n  stocks: {},\n};\nStock.propTypes = {\n  current: PropTypes.string.isRequired,\n  fetchStockChart: PropTypes.func.isRequired,\n  stocks: {\n    latestPrice: PropTypes.string.isRequired,\n    chart: PropTypes.array.isRequired,\n    company: PropTypes.string.isRequired,\n    intraday: PropTypes.array.isRequired,\n  },\n};\nexport default Stock;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchStockChart } from '../actions/stock_actions';\nimport StockChart from './stockChartWidget';\n\nconst mapSTP = (state, ownProps) => ({\n  stocks: state.entities.stocks,\n  current: ownProps.match.params.sym || 'MSFT',\n  ownProps,\n});\n\nconst mapDTP = (dispatch) => ({\n  fetchStockChart: (ticker, range) => dispatch(fetchStockChart(ticker, range)),\n});\n\nexport default withRouter(connect(mapSTP, mapDTP)(StockChart));\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport StockPage from './stockPage';\n\nconst Title = styled.h1`\n  margin: 1rem;\n  font-size: 2rem;\n  font-weight: bolder;\n`;\nconst MainWrapper = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Main = () => (\n  <MainWrapper>\n    <Title>Stock Research</Title>\n    <Switch>\n      <Route path=\"/:sym\" component={StockPage} />\n      <Route path=\"/\" component={StockPage} />\n    </Switch>\n  </MainWrapper>\n);\nexport default Main;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Nav from './components/nav';\nimport Main from './components/main';\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <Nav />\n        <Main />\n      </Router>\n    </div>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}