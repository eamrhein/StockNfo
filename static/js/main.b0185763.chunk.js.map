{"version":3,"sources":["util/stock_util.js","actions/stock_actions.js","reducers/stocks_reducer.js","reducers/root_reducer.js","store/store.js","components/searchBar.jsx","components/nav.jsx","util/helpers.js","components/about.jsx","components/stockNFO.jsx","components/stockPage.js","components/main.jsx","theme.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API_TOKEN","BASE_URL","fetchStockChart","ticker","range","dispatch","a","async","interval","fetch","catch","err","console","log","response","intraDay","json","intraParsed","parsed","chart","APIStockUtil","then","stats","chartData","type","receiveStockChart","fetchSymbols","symbols","receiveStocks","stockReducer","state","action","Object","freeze","data","allStocks","quote","company","logo","url","intraday","news","rootReducer","combineReducers","stocks","history","createBrowserHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","Search","styled","div","Results","props","theme","colors","navbar","primary","Result","card","Heading","Symbol","span","Label","Name","SearchBar","useState","cursor","setCursor","input","setInput","hover","setHover","match","stock","matchBool","matchFunc","field","fstring","testInput","toLowerCase","length","slice","name","symbol","className","placeholder","value","onKeyDown","e","keyCode","document","getElementsByClassName","innerHTML","push","onChange","target","results","i","filterStocks","map","onClick","key","onMouseEnter","onMouseLeave","split","join","defaultProps","withRouter","Navbar","nav","Logo","LogoText","h3","NavItems","Nav","loadStocks","useEffect","connect","contains","pattern","forEach","word","includes","CompanInfo","Table","Tbody","Trow","Cell","Text","Info","Desc","p","Tags","Tag","About","expand","setExpand","filterStock","description","stockList","keys","filter","tableRow","table","sym","row","info","renderTable","tags","tag","StockWrapper","ChartWrapper","CompanyName","h1","Price","h2","ChangeStyle","RangeGroup","RangeBtn","Img","img","Stock","current","chartState","setChartState","setCompany","price","setPrice","setRange","change","setChange","setLogo","parseChange","method","currentPrice","parseFloat","latestPrice","percent","prevPrice","toFixed","securityName","diff","rangeStr","sign","Math","changeComp","renderChange","handleRange","innerText","alt","src","width","height","strokeDasharray","domain","hide","dataKey","connectNulls","dot","strokeWidth","stroke","separator","offset","position","y","isAnimationActive","id","ownProps","params","StockChart","MainWrapper","main","Main","path","component","StockPage","background","font","secondary","third","fourth","fifth","sixth","BaseStyle","App","basename","process","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0185763.chunk.js","sourcesContent":["/* eslint-disable import/prefer-default-export */\nconst API_TOKEN = 'pk_ae15acdbbf2a463384bff1f6681e6fc5';\nconst BASE_URL = 'https://cloud.iexapis.com/stable/stock';\nexport async function fetchStockChart(ticker, range) {\n  let interval;\n  switch (range) {\n    case '5y':\n      interval = 48;\n      break;\n    case '1Y':\n      interval = 9;\n      break;\n    case '3M':\n      interval = 4;\n      break;\n    case '1M':\n      interval = 1;\n      break;\n    case '1D':\n      interval = 12;\n      break;\n    default:\n      interval = 100;\n      break;\n  }\n  const response = await fetch(\n    `${BASE_URL}/${ticker}/batch?range=${range}&chartInterval=${interval * 10}&types=company,quote,chart,stats,logo,news&token=${API_TOKEN}`,\n  ).catch((err) => console.log(err));\n  const intraDay = await fetch(\n    `${BASE_URL}/${ticker}/batch?&types=chart&range=1D&chartInterval=12&token=${API_TOKEN}`,\n  ).catch((err) => console.log(err));\n  const intraParsed = await intraDay.json();\n  const parsed = await response.json();\n  parsed.intraDay = intraParsed.chart;\n  return parsed;\n}\n\nexport async function fetchSymbols() {\n  const response = await fetch(`https://cloud.iexapis.com/beta/ref-data/symbols?token=${API_TOKEN}`);\n  const json = await response.json();\n  return json;\n}\n","import * as APIStockUtil from '../util/stock_util';\n\nexport const LOAD_SYMBOLS = 'LOAD_SYMBOLS';\nexport const RECEIVE_STOCKS = 'RECEIVE_STOCKS';\nexport const RECEIVE_STOCK_CHART = 'RECEIVE_STOCK_CHART';\n\nconst receiveStocks = (symbols) => ({\n  type: RECEIVE_STOCKS,\n  symbols,\n});\n\nconst receiveStockChart = (chartData, ticker) => ({\n  type: RECEIVE_STOCK_CHART,\n  ticker,\n  chartData,\n});\n\nexport const fetchStockChart = (ticker, range) => (dispatch) => (\n  APIStockUtil.fetchStockChart(ticker, range)\n    .then((stats) => dispatch(receiveStockChart(stats, ticker))));\n\nexport const fetchSymbols = () => (dispatch) => (\n  APIStockUtil.fetchSymbols()\n    .then((symbols) => dispatch(receiveStocks(symbols))));\n","import { RECEIVE_STOCKS, RECEIVE_STOCK_CHART } from '../actions/stock_actions';\n\nconst stockReducer = (state = {}, action) => {\n  Object.freeze(state);\n  let data = {};\n  switch (action.type) {\n    case RECEIVE_STOCKS:\n      return {\n        ...state,\n        allStocks: action.symbols,\n      };\n    case RECEIVE_STOCK_CHART:\n      data = {\n        ...action.chartData.quote,\n        ...action.chartData.stats,\n        ...action.chartData.company,\n        logo: action.chartData.logo.url,\n        chart: action.chartData.chart,\n        intraday: action.chartData.intraDay,\n        news: action.chartData.news,\n      };\n      return {\n        ...state,\n        [action.ticker]: data,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default stockReducer;\n","import { combineReducers } from 'redux';\nimport stockReducer from './stocks_reducer';\n\nconst rootReducer = combineReducers({\n  stocks: stockReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport thunk from 'redux-thunk';\nimport { createBrowserHistory } from 'history';\nimport rootReducer from '../reducers/root_reducer';\n\nexport const history = createBrowserHistory();\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [thunk, routerMiddleware(history)];\n\nif (process.env.NODE_ENV === 'development') {\n  const devToolsExt = window._REDUX_DEVTOOLS_EXTENSION_;\n\n  if (typeof devToolsExt === 'function') {\n    enhancers.push(devToolsExt());\n  }\n}\n\nconst composedEnhancers = compose(applyMiddleware(...middleware), ...enhancers);\n\nconst store = createStore(\n  connectRouter(history)(rootReducer),\n  initialState,\n  composedEnhancers,\n);\n\nexport default store;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Search = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 8px;\n  border-radius: 5px;\n  background-color: #FAFAFA;\n  color: #cbcbcb;\n  border: 1px solid black;\n  padding: 0 24px 0 3px;\n  width: 100%;\n  input {\n    width: 100%;\n    color: #cbcbcb;\n    border: none;\n    height: 36px;\n    tranistion: color 150ms ease-out;\n  }\n  .fa-search {\n    font-size: 14pt;\n    color: #444444;\n  }\n`;\nconst Results = styled.div`\n  z-index: 20;\n  display: table;\n  width: 90vw;\n  padding: 10px;\n  position: absolute;\n  left: 4vw;\n  top: 55px;\n  right: 1vw;\n  border-radius: 4px;\n  background-color: ${(props) => props.theme.colors.navbar};\n  .active {\n    background-color: ${(props) => props.theme.colors.navbar};\n    color: ${(props) => props.theme.colors.primary};\n  }\n`;\nconst Result = styled.div`\n  background-color: ${(props) => props.theme.colors.card};\n  display: table-row;\n  margin: 1px;\n  line-height: 1.5;\n`;\nconst Heading = styled.div`\n  display: table-row;\n  margin: 1px;\n`;\nconst Symbol = styled.span`\n  padding-right: 3rem;\n  display: table-cell;\n  font-weight: bolder;\n`;\n\nconst Label = styled.div`\n  padding: 1px;\n  font-size: 10pt;\n  color: grey;\n  font-weight: bolder;\n  display: table-cell;\n`;\nconst Name = styled.span`\n  display: table-cell;\n`;\nconst SearchBar = (props) => {\n  const { allStocks, history } = props;\n  const [cursor, setCursor] = useState(0);\n  const [input, setInput] = useState('');\n  const [hover, setHover] = useState(null);\n  const match = (stock) => {\n    let matchBool = false;\n    const matchFunc = (field) => {\n      let fstring = '';\n      const testInput = input.toLowerCase();\n      if (typeof field === 'string') {\n        fstring = field.toLowerCase();\n      }\n      return (\n        testInput.length <= field.length\n        && fstring.slice(0, testInput.length) === testInput\n      );\n    };\n    if (stock.name && (matchFunc(stock.name) || matchFunc(stock.symbol))) {\n      matchBool = true;\n    }\n    return matchBool;\n  };\n\n  const filterStocks = () => {\n    const results = [];\n    const maxSize = 6;\n    let i = 0;\n    if (allStocks) {\n      while (results.length < maxSize && i < allStocks.length) {\n        if (match(allStocks[i])) {\n          results.push(allStocks[i]);\n        }\n        i += 1;\n      }\n    }\n    return results;\n  };\n  const handleClick = (symbol) => {\n    setInput('');\n    history.push(`/${symbol}`);\n  };\n  const renderResults = () => {\n    if (input.length > 0) {\n      return (\n        <Results>\n          <Heading>\n            <Label>Symbol</Label>\n            <Label>Name</Label>\n          </Heading>\n          {filterStocks().map((stock, i) => (\n            <Result\n              onClick={() => handleClick(stock.symbol)}\n              className={cursor === i || hover === i ? 'active' : null}\n              key={stock.symbol}\n              onMouseEnter={() => setHover(i)}\n              onMouseLeave={() => setHover(null)}\n            >\n              <Symbol className=\"result\">{stock.symbol}</Symbol>\n              <Name>\n                {stock.name\n                  .split(' ')\n                  .slice(0, 3)\n                  .join(' ')}\n              </Name>\n            </Result>\n          ))}\n        </Results>\n      );\n    }\n    return null;\n  };\n  const handleKeyDown = (e) => {\n    if (e.keyCode === 38 && cursor > 0) {\n      setCursor(cursor - 1);\n    } else if (e.keyCode === 40 && cursor < allStocks.length) {\n      setCursor(cursor + 1);\n    }\n    if (e.keyCode === 13) {\n      const elements = [...document.getElementsByClassName('result')];\n      const symbol = elements[cursor].innerHTML;\n      setInput('');\n\n      history.push(`/${symbol}`);\n    }\n  };\n  return (\n    <>\n      <Search>\n        {/* <FontAwesomeIcon icon={faSearch} /> */}\n        <input\n          type=\"text\"\n          className=\"searcbar-input\"\n          placeholder=\"  Search\"\n          value={input}\n          onKeyDown={handleKeyDown}\n          onChange={(e) => setInput(e.target.value)}\n        />\n      </Search>\n      {renderResults()}\n    </>\n  );\n};\nSearchBar.defaultProps = {\n  allStocks: [],\n  history: {},\n};\nSearchBar.propTypes = {\n  allStocks: PropTypes.arrayOf(PropTypes.shape({})),\n  history: PropTypes.shape({\n    length: PropTypes.number.isRequired,\n    push: PropTypes.func.isRequired,\n  }),\n};\n\nexport default withRouter(SearchBar);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AiOutlineStock } from 'react-icons/ai';\nimport styled from 'styled-components';\nimport { fetchSymbols } from '../actions/stock_actions';\nimport SearchBar from './searchBar';\n\nconst Navbar = styled.nav`\n  background-color: ${(props) => props.theme.colors.navbar};\n`;\nconst Logo = styled.i`\n  text-shadow: 1px 1px black; \n  padding: 6px;\n  margin-right: 10px;\n  font-size: 34pt;\n  font-weight: bolder;\n  color: ${(props) => props.theme.colors.primary};\n`;\nconst LogoText = styled.h3`\n  text-shadow: 1px 1px black;\n  font-family: Roboto Condensed;\n  font-weight: lighter;\n  strong {\n    font-family: Eczar;\n    font-weight: bolder;\n    color: ${(props) => props.theme.colors.primary}\n  }\n`;\nconst NavItems = styled.div`\n  margin-left: 10px;\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Nav = ({ allStocks, loadStocks }) => {\n  useEffect(() => {\n    loadStocks();\n  }, [loadStocks]);\n  return (\n    <Navbar>\n      <NavItems>\n        <LogoText>\n          Stock\n          <strong>NFO</strong>\n        </LogoText>\n        <Logo>\n          <AiOutlineStock />\n        </Logo>\n        <SearchBar allStocks={allStocks} />\n      </NavItems>\n    </Navbar>\n  );\n};\n\nNav.defaultProps = {\n  allStocks: [],\n};\nNav.propTypes = {\n  allStocks: PropTypes.arrayOf(PropTypes.shape({})),\n  loadStocks: PropTypes.func.isRequired,\n};\n\n\nconst mSTP = (state) => ({\n  allStocks: state.stocks.allStocks,\n});\nconst mDTP = (dispatch) => ({\n  loadStocks: () => dispatch(fetchSymbols()),\n});\nexport default connect(mSTP, mDTP)(Nav);\n","function contains(target, pattern) {\n  let value = 0;\n  pattern.forEach((word) => {\n    value += target.includes(word);\n  });\n  return (value === 1);\n}\nexport default contains;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport contains from '../util/helpers';\n\nconst CompanInfo = styled.div`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Table = styled.div`\n  display: table;\n`;\nconst Tbody = styled.div`\n  display: table-row-group;\n`;\nconst Trow = styled.div`\n  display: table-row;\n`;\nconst Cell = styled.div`\n  display: table-cell;\n  padding: 1rem;\n  @media (max-width: 700px) {\n    display: flex;\n    flex-direction: column;\n  }\n`;\nconst Heading = styled.div`\n  text-transform: capitalize;\n  font-weight: bold;\n  padding-bottom: 10px;\n`;\nconst Text = styled.span`\n  cursor: pointer;\n  color: #7b1fa2;\n  font-weight: 600;\n`;\nconst Info = styled.div`\n  font-weight: light;\n`;\nconst Desc = styled.p`\n  text-indent: 25px;\n  line-height: 1.5;\n  font-size: 10pt;\n`;\nconst Tags = styled.div`\n  display: flex;\n`;\nconst Tag = styled.span`\n  flex-direction: row;\n  align-items: center;\n  background-color: #7b1fa2;\n  color: #e8c9f5;\n  fill: purple;\n  font-size: 10pt;\n  font-weight: 700;\n  margin: 0 12px 5px 0;\n  padding: 8px;\n  border-radius: 17px;\n`;\n\nconst About = ({ stock }) => {\n  const [expand, setExpand] = useState(false);\n  const filterStock = (key) => {\n    key = key.toLowerCase();\n    if (contains(key, ['iex', 'time', 'description', 'price', 'change', 'symbol', 'logo'])) {\n      return false;\n    }\n    if (typeof stock[key] === 'number') {\n      return true;\n    }\n    if (typeof stock[key] === 'string') {\n      return true;\n    }\n    return false;\n  };\n\n  const renderTable = () => {\n    const stockList = Object.keys(stock).filter(filterStock);\n    let tableRow = [];\n    const table = [];\n    stockList.forEach((sym, i) => {\n      if (i % 4 === 0 && i !== 0) {\n        table.push(tableRow);\n        tableRow = [];\n      }\n      tableRow.push([\n        sym, stock[sym],\n      ]);\n    });\n    table.push(tableRow);\n    return (\n      <Table>\n        <Tbody>\n          {table.map((row) => (\n            <Trow>\n              {row.map((info) => (\n                <Cell>\n                  <Heading>{info[0]}</Heading>\n                  <Info>{info[1]}</Info>\n                </Cell>\n              ))}\n            </Trow>\n          ))}\n        </Tbody>\n      </Table>\n    );\n  };\n  return (\n    <CompanInfo>\n      <h1>About</h1>\n      <Desc>\n        {expand\n          ? stock.description\n          : `${stock.description.slice(0, 350)}... `}\n        <Text onClick={() => setExpand(!expand)}>\n          {expand ? 'read less' : 'read more'}\n        </Text>\n      </Desc>\n      {renderTable()}\n\n      <h2>Investment Type</h2>\n      <Tags>\n        {stock.tags.map((tag) => (\n          <Tag key={tag}>{tag}</Tag>\n        ))}\n      </Tags>\n    </CompanInfo>\n  );\n};\n\nAbout.defaultProps = {\n  stock: {},\n};\nAbout.propTypes = {\n  stock: PropTypes.shape({\n    description: PropTypes.string,\n    website: PropTypes.string,\n    CEO: PropTypes.string,\n    employees: PropTypes.number,\n    city: PropTypes.string,\n    state: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.string),\n    volume: PropTypes.number,\n    dividendYield: PropTypes.number,\n    peRatio: PropTypes.number,\n    marketCap: PropTypes.number,\n  }),\n};\nexport default About;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  LineChart,\n  Line,\n  YAxis,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend,\n} from 'recharts';\nimport styled from 'styled-components';\nimport About from './about';\n\nconst StockWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80vw;\n  bottom: 5vw;\n`;\nconst ChartWrapper = styled.div`\n  background-color: ${(props) => props.theme.colors.card};\n  padding: 1rem;\n  margin: 1rem;\n`;\nconst CompanyName = styled.h1`\n  text-align: center;\n  line-height: 42px;\n  font-size: 36px;\n  font-weight: 500;\n`;\nconst Price = styled.h2`\n  font-size: 36px;\n  font-weight: 400;\n  line-height 42px;\n  margin-left: 1rem;\n`;\nconst ChangeStyle = styled.div`\n  margin-left: 1rem;\n`;\nconst RangeGroup = styled.div`\n  cursor: pointer;\n  display: flex;\n  font-weight: 600;\n  margin-left: 1rem;\n  #active {\n    color: #7b1fa2;\n  }\n`;\nconst RangeBtn = styled.div`\n  font-size: 0.8rem;\n  margin: 0rem 0.25rem;\n`;\nconst Img = styled.img`\n  margin-right: 0.5rem;\n  margin-left: 0.5rem;\n  max-width: 40px;\n  width: 100%;\n  height: auto;\n`;\n\nconst Stock = ({ stocks, fetchStockChart, current }) => {\n  const [chartState, setChartState] = useState([]);\n  const [company, setCompany] = useState('');\n  const [price, setPrice] = useState('');\n  const [range, setRange] = useState('5Y');\n  const [change, setChange] = useState('');\n  const [logo, setLogo] = useState('');\n\n  useEffect(() => {\n    fetchStockChart(current, range);\n  }, [fetchStockChart, range, current]);\n\n  useEffect(() => {\n\n  }, [range]);\n\n  useEffect(() => {\n    if (stocks[current]) {\n      const parseChange = (method) => {\n        const currentPrice = parseFloat(stocks[current].latestPrice);\n        let percent = parseFloat(stocks[current][method]);\n        const prevPrice = currentPrice - currentPrice * percent;\n        percent = (percent * 100).toFixed(2);\n        const diff = (currentPrice - prevPrice).toFixed(2);\n        return [diff, percent];\n      };\n      const renderChange = () => {\n        let rangeStr = '';\n        let diff;\n        let percent;\n        switch (range) {\n          case '1D':\n            [diff, percent] = parseChange('changePercent');\n            rangeStr = ' Today';\n            break;\n          case '1M':\n            [diff, percent] = parseChange('month1ChangePercent');\n            rangeStr = ' Past Month';\n            break;\n          case '3M':\n            [diff, percent] = parseChange('month3ChangePercent');\n            rangeStr = ' Past 3 Months';\n            break;\n          case '1Y':\n            [diff, percent] = parseChange('year1ChangePercent');\n            rangeStr = ' Past Year';\n            break;\n          case '5Y':\n            [diff, percent] = parseChange('year5ChangePercent');\n            rangeStr = ' Past 5 Years';\n            break;\n          default:\n            break;\n        }\n        const sign = Math.sign(diff) === 1 ? '+' : null;\n        const changeComp = (\n          <ChangeStyle>\n            <span>\n              {sign}\n$\n              {diff}\n              {' '}\n(\n              {percent}\n              %)\n            </span>\n            <span>{rangeStr}</span>\n          </ChangeStyle>\n        );\n        setChange(changeComp);\n      };\n      setLogo(stocks[current].logo);\n      setChartState(stocks[current].chart);\n      setCompany(stocks[current].securityName);\n      setPrice(stocks[current].latestPrice.toFixed(2));\n      renderChange();\n    }\n  }, [stocks, current, range]);\n  const handleRange = (e) => {\n    const text = e.target.innerText;\n    switch (text) {\n      case '1D':\n        setRange('1D');\n        setChartState(stocks[current].intraday);\n        break;\n      case '1M':\n        setRange('1M');\n        setChartState(stocks[current].chart);\n        break;\n      case '3M':\n        setRange('3M');\n        setChartState(stocks[current].chart);\n        break;\n      case '1Y':\n        setRange('1Y');\n        setChartState(stocks[current].chart);\n        break;\n      case '5Y':\n        setRange('5Y');\n        setChartState(stocks[current].chart);\n        break;\n      default:\n        break;\n    }\n  };\n  const renderLineChart = () => (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart data={chartState} width={400} height={400}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <YAxis domain={['dataMin', 'dataMax']} hide />\n        <XAxis hide dataKey=\"label\" />\n        <Legend />\n        <Line\n          connectNulls\n          name=\"USD $\"\n          type=\"monotone\"\n          dot={false}\n          dataKey=\"close\"\n          strokeWidth={2.5}\n          stroke=\"#7B1FA2\"\n        />\n        <Tooltip\n          separator=\"\"\n          offset={-40}\n          position={{ y: -15 }}\n          isAnimationActive\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n  return (\n    chartState.length !== 0 ? (\n      <StockWrapper>\n        <CompanyName>\n          {company}\n        </CompanyName>\n        <Price>\n          {logo ? (<Img alt=\"company-logo\" src={logo} />) : null}\n       $\n          {price}\n        </Price>\n        {change}\n        <ChartWrapper>\n          {renderLineChart()}\n          <RangeGroup>\n            <RangeBtn id={range === '1D' ? 'active' : null} onClick={handleRange}>\n          1D\n            </RangeBtn>\n            <RangeBtn id={range === '1M' ? 'active' : null} onClick={handleRange}>\n          1M\n            </RangeBtn>\n            <RangeBtn id={range === '3M' ? 'active' : null} onClick={handleRange}>\n          3M\n            </RangeBtn>\n            <RangeBtn id={range === '1Y' ? 'active' : null} onClick={handleRange}>\n          1Y\n            </RangeBtn>\n            <RangeBtn id={range === '5Y' ? 'active' : null} onClick={handleRange}>\n          5Y\n            </RangeBtn>\n          </RangeGroup>\n        </ChartWrapper>\n        <About stock={stocks[current]} />\n      </StockWrapper>\n    ) : (\n      <div className=\"chart-Wraper\">...Loading</div>\n    )\n  );\n};\nStock.defaultProps = {\n  stocks: {},\n};\nStock.propTypes = {\n  current: PropTypes.string.isRequired,\n  fetchStockChart: PropTypes.func.isRequired,\n  stocks: PropTypes.shape({}),\n};\nexport default Stock;\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchStockChart } from '../actions/stock_actions';\nimport StockChart from './stockNFO';\n\nconst mapSTP = (state, ownProps) => ({\n  stocks: state.stocks,\n  current: ownProps.match.params.sym || 'MSFT',\n  ownProps,\n});\n\nconst mapDTP = (dispatch) => ({\n  fetchStockChart: (ticker, range) => dispatch(fetchStockChart(ticker, range)),\n});\n\nexport default withRouter(connect(mapSTP, mapDTP)(StockChart));\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport StockPage from './stockPage';\n\nconst MainWrapper = styled.main`\n  margin: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Main = () => (\n  <MainWrapper>\n    <Switch>\n      <Route path=\"/:sym\" component={StockPage} />\n      <Route path=\"/\" component={StockPage} />\n    </Switch>\n  </MainWrapper>\n);\nexport default Main;\n","import styled from 'styled-components';\n\nconst theme = {\n  colors: {\n    navbar: '#27272f',\n    background: '#33333D',\n    card: '#373740',\n    font: '#FFFFFF',\n    primary: '#1EB980',\n    secondary: '#045D56',\n    third: '#FF6859',\n    fourth: '#FFCCF44',\n    fifth: '#B15DFF',\n    sixth: '#72DEFF',\n  },\n};\n\nconst BaseStyle = styled.div`\n  \n  background-color: ${(props) => (props.theme.colors.background)};\n  color: ${(props) => props.theme.colors.font};\n  p {\n    font-family: 'Eczar',\n    font-size: 12pt;\n    font-weight: 'light'\n  }\n  h1 {\n    font-family: 'Roboto Condensed', sans-serif;\n    font-size: 34pt;\n    font-weight: light;\n  }\n  h2 {\n    font-family: 'Eczar'\n    font-size: 24pt;\n    font-weight: bold;\n  }\n  h3 {\n    font-family: 'Roboto Condensed', sans-serif;\n    font-size: 20pt;\n    font-weight: regular;\n  }\n`;\n\nexport { BaseStyle, theme };\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Nav from './components/nav';\nimport Main from './components/main';\nimport { BaseStyle, theme } from './theme';\n\n\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <BaseStyle>\n        <Router basename={process.env.PUBLIC_URL}>\n          <Nav />\n          <Main />\n        </Router>\n      </BaseStyle>\n    </ThemeProvider>\n  </Provider>\n);\nApp.defaultProps = {\n  store: {},\n};\nApp.propTypes = {\n  store: PropTypes.shape({}),\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './store/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}